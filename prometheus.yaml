apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: prometheus
  name: prometheus
  namespace: redhat-odh-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: prometheus
  template:
    metadata:
      labels:
        deployment: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - args:
        - -provider=openshift
        - -https-address=:9091
        - -http-address=
        - -email-domain=*
        - -upstream=http://localhost:9090
        - -openshift-service-account=prometheus
        - '-openshift-sar={"resource": "namespaces", "verb": "get", "name": "redhat-odh-monitoring",
          "namespace": "redhat-odh-monitoring"}'
        - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get",
          "name": "redhat-odh-monitoring", "namespace": "redhat-odh-monitoring"}}'
        - -tls-cert=/etc/tls/private/tls.crt
        - -tls-key=/etc/tls/private/tls.key
        - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
        - -cookie-secret-file=/etc/proxy/secrets/session_secret
        - -openshift-ca=/etc/pki/tls/cert.pem
        - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - -client-id=system:serviceaccount:redhat-odh-monitoring:prometheus
        - -skip-auth-regex=^/metrics
        image: quay.io/openshift/origin-oauth-proxy:4.7.0
        name: oauth-proxy
        ports:
        - containerPort: 9091
          name: https
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /etc/tls/private
          name: prometheus-tls
          readOnly: false
        - mountPath: /etc/proxy/secrets
          name: prometheus-proxy
          readOnly: false
      - image: quay.io/prometheus/prometheus:v2.24.1
        args:
          - --storage.tsdb.retention=6h
          - --storage.tsdb.min-block-duration=2h
          - --storage.tsdb.max-block-duration=2h
          - --storage.tsdb.path=/prometheus/data
          - --config.file=/etc/prometheus/prometheus.yml
          - --web.listen-address=localhost:9090
          - --web.enable-lifecycle
          - --web.enable-admin-api
        imagePullPolicy: Always
        name: prometheus
        ports:
        - containerPort: 9090
          name: http
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /prometheus
          name: prometheus-data
        - mountPath: /etc/prometheus
          name: prometheus-config
        - mountPath: /var/run/secrets/kubernetes.io/scraper
          name: prometheus-secret
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 90
      volumes:
      - name: prometheus-data
        persistentVolumeClaim:
          claimName: prometheus-data
      - name: prometheus-config
        configMap:
          defaultMode: 420
          name: prometheus
      - name: prometheus-secret
        secret:
          secretName: prometheus-secret
      - name: prometheus-tls
        secret:
          defaultMode: 420
          secretName: prometheus-tls
      - name: prometheus-proxy
        secret:
          defaultMode: 420
          secretName: prometheus-proxy
---
apiVersion: v1
data:
  session_secret: "uTgRq5qg4GlwsIXrAePXjTqz5DBhKqhERfGVOmyS"
kind: Secret
metadata:
  name: prometheus-proxy
  namespace: redhat-odh-monitoring
type: Opaque

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus
  namespace: redhat-odh-monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval:     10s
      evaluation_interval: 10s
    scrape_configs:
      - job_name: 'JupyterHub Metrics'
        honor_labels: true
        metrics_path: /hub/metrics
        scheme: http
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - opendatahub
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            regex: ^(jupyterhub)$
            target_label: kubernetes_name
            action: keep
          - source_labels: [__address__]
            regex: (.+):(\d+)
            target_label: __address__
            replacement: ${1}:8080
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: prometheus-tls
    prometheus.io/scheme: https
    prometheus.io/scrape: 'true'
  labels:
    app: prometheus
  name: prometheus
  namespace: redhat-odh-monitoring
spec:
  ports:
  - name: https
    port: 9091
    targetPort: https
  selector:
    deployment: prometheus
  sessionAffinity: None
  type: ClusterIP
---
# Create a service account for accessing prometheus data
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-reader
  namespace: redhat-odh-monitoring
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"prometheus"}}'
      serviceaccounts.openshift.io/oauth-redirectreference.prometheus: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"prometheus-external"}}'
  name: prometheus
  namespace: redhat-odh-monitoring
---
apiVersion: v1
kind: Secret
metadata:
  name: prometheus-secret
  namespace: redhat-odh-monitoring
  annotations:
    kubernetes.io/service-account.name: prometheus
type: kubernetes.io/service-account-token
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    kubernetes.io/tls-acme: 'true'
  labels:
    app: prometheus
  name: prometheus
  namespace: redhat-odh-monitoring
spec:
  port:
    targetPort: https
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: reencrypt
  to:
    kind: Service
    name: prometheus
  wildcardPolicy: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus_role_binding
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: redhat-odh-monitoring
roleRef:
  kind: ClusterRole
  name: cluster-reader
  apiGroup: rbac.authorization.k8s.io
